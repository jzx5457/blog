一、微信概述
1、历史背景
•	1）2011年1月21日，腾讯推出微信应用程序。（张小龙和张伯龙）
•	2）2012年8月20日，腾讯推出微信公众平台功能，同年11月开放第三方接口
•	3）2013年11月注册用户量突破6亿，是亚洲地区最大用户群体的移动即时通讯软件。
•	4）截止到2016年第二季度，微信已经覆盖中国 94% 以上的智能手机，月活跃用户达到 8.06亿，用户覆盖 200 多个国家、超过 20 种语言。
2、微信公众平台的概念和分类
•	微信公众平台是腾讯为了让用户申请和管理微信公众账号而推出的一个Web平台，而微信公众账号的操作管理在这个平台下进行。所有用户都在腾讯提供的统一微信公众平台下进行相关操作：
•	平台地址:https://mp.weixin.qq.com/

微信公众平台的账号分为两种:
1.微信公众平台的服务号
2.微信公众平台的订阅号


一、微信公众平台服务号的功能：

公众平台服务号，是公众平台的一种帐号类型，旨在为用户提供服务。如：招商银行、大铭装饰、中国南方航空。
1、1个月（30天）内仅可以发送1条群发消息。
2、发给订阅用户（粉丝）的消息，会显示在对方的聊天列表中。相对应微信的首页。
3、服务号会在订阅用户（粉丝）的通讯录中。通讯录中有一个服务号的文件夹，点开可以查看所有服务号。
4、服务号可申请自定义菜单(自定义链接)。
服务号成为开发者可以获取微信公众号所有的接口功能(交300块),例如:微信支付.
所以服务号一般是企业申请比较多,申请需要提供相关营业备案和执照.

二、微信公众平台订阅号的功能
公众平台订阅号，是公众平台的一种帐号类型，为微信公众平台用户提供信息和资讯。如：骑行西藏、央视新闻。
1、每天（24小时内）可以发送1条群发消息。
2、发给订阅用户（粉丝）的消息，将会显示在对方的“订阅号”文件夹中。点击两次才可以打开。
3、在订阅用户（粉丝）的通讯录中，订阅号将被放入订阅号文件夹中。
4、订阅号在获得微信认证后也可以申请自定义菜单。(但不能自定义菜单中的链接)
订阅号成为开发者一般只拥有基础接口,无法申请开通微信支付.
目前在国内订阅号主要用于公众人物和明星人物比较火
 
4、微信公众平台的作用
1.让公众号帮你将内容分享给好友
2.微信营销
选择一家在行业中具有相当影响力和权威性的微信公众账号作为营销平台，在新的媒体环境和市场竞争中才能与时俱进，这已成为企业的共识。拥有真实粉丝数量庞大的微信公众账号已经成为网络营销的必备利器。营销方式主要有：

一、图片广告。微信公众账号每天精选业有价值的新闻、资讯等富媒体推送给订阅用户，并在在文章的插图或者最后面，附上一张精心设计广告图一目了然，不影响用户体验，还能实现广告传播效果最大化。

二、植入广告。在推送的富媒体内容上，植入广告内容，比如在文章、图片中提到某些品牌的名字、广告词等，这类广告不漏痕迹，不易引起用户抵触，基于数量巨大的粉丝和用户对微信账号的高度认可，这类广告效果效果也不错。

三、纯粹广告。某些信息发布类媒体的微信公众账号可以定期整理一定数量的“纯粹广告”进行发布，广告内容本身就是用户需要的一种服务，广告自然效果最佳。
3、微信与微信公众平台区别
•	微信是基于点对点关系
•	微信公众平台是基于一对多关系
•	微信不能群发信息,微信公众平台可以群发消息
5、微信公众平台使用说明
•	编辑模式与开发模式
•	两种是互斥的
•	编辑模式是平台内置的web系统
•	开发模式可以通过腾讯的API接口进行二次开发
6、微信编辑模式应用场景
•	不具备开发能力的运营者
•	主要是进行品牌宣传、新闻媒体、自助客服的公众帐号
•	运营初期，不需要特别多的功能
•	开发模式系统升级、故障等特殊情况

7、微信编辑模式的基本使用
1.使用自动回复的功能:
 
2.使用素材管理:
 

3.使用群发功能:
 
4.使用菜单自定义
 
二、开发者模式
1、编辑模式运行原理图
 
2、微信开发者模式运行原理图
 
三、阿里云
1.阿里云服务器
阿里云，阿里巴巴旗下公司，创立于2009年，是中国的云计算平台，服务范围覆盖全球200多个国家和地区。
平台地址：https://www.aliyun.com/

2.配置阿里云服务器
注意:如果在阿里云服务器上玩微信开发建议使用php5.5或以上版本,并且必须让php支持curl库.然而这过程跟你在虚拟机中安装lamp的过程是一样的,所以你可以在你的虚拟机上练习一次后再到真正的服务器上去进行安装.
为了后面传代码方便,建议在阿里云服务器上先安装rzsz和ftp工具,安装结果如下:
安装rzsz工具:
 
安装vsftpd工具:
 
把vsftpd加入开机脚本
 
 
由于我们一般使用ftp进行代码的上传会比较多,所以我们需要创建一个普通的用户来进行代码的上传
特别：注意在阿里云中必须要以22端口进行ftp登录
为了方法ftp不需要手动更改站点目录,所以可以手动添加以下定时命令:
 
 
安装memcache(因为微信开发中使用access_token最好开启memcache)
 
安装unzip和zip解压缩工具
 
1)在阿里云服务器中安装Apache服务器
输入以下命令:yum -y install httpd httpd-manual mod_ssl mod_perl mod_auth_mysql
 
由于在真实的服务器环境,我们不可能每一次都去启动apache服务器,所以我们需要把apache服务器加入开机脚本当中:
 
然后使用vim /etc/httpd/conf/httpd.conf,修改ServerName的相关选项如下:
 

2)在阿里云服务器中安装mysql
安装mysql输入以下安装指令:
yum -y install mysql mysql-server mysql-devel
 
由于默认安装的情况下,我们的mysql服务器会存在乱码的问题,所以我们需要为mysql打上脚本补丁包,把补丁包上传/usr/local/src
 
然后我们需要保证mysql.sh的脚本文件的权限为777,接下就需要执行该脚本:
 
执行脚本完成后,我们需要启动mysqld的服务:
 
由于服务器中的mysqld也是不可能每次手动去启动的,所以真正的服务器一般都把mysqld加入开机基本当中:
 
我们需要为mysql数据库设置一个密码,密码不要为12346
 
完成后,我们需要进去mysql当中查看一下编码的设置,确认以下几项为utf8就可以:
 
如果我们开发微信时需要使用到mysql必须在mysql加入[client]的客户端默认编码
 
保存并退出(:x),重启mysqld服务
 
3)安装php5.6
这时要主要由于我们需要使用这个php的版本来做微信开发,所以必须要让该php支持curl库,安装php5.6命令如下:
#配置yum源
rpm -Uvh http://ftp.iij.ad.jp/pub/linux/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm

#安装PHP5.6.x(注意安装的时候必须加上php-curl)
yum -y install --enablerepo=remi --enablerepo=remi-php56 php php-opcache php-devel php-mbstring php-mcrypt php-mysqlnd php-pecl-xdebug php-pecl-xhprof  libmemcached php-pecl-memcache php-pecl-memcached php-gd* php-curl
安装完成后需要重启apche服务器:
 
接下来需要在/var/www/html下编写phpinfo.php文件,内容如下 :
<?php
phpinfo();
如果运行后发觉php可以成功安装,这时我们必须要注意是否存在curl库的支持:

 


四、微信的API接口
1、获取微信的API接口
这是微信官方提供的给开发者的一个测试实例：
https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=open1419318183&token=&lang=zh_CN
但这个示例太简单，基本没有任何的参考价值，但我们可以去张伯龙的博客中进行另外一个微信api的示例代码下载:
http://zblwxapi.duapp.com
 

2.实现Api配置和服务器绑定详细步骤
第1步:把api的zip包解压,然后把文件上传到/var/www/html下
 
第2步:进入微信公众平台后台,找到开发者工具
 
 
第3步:填入api的地址和域名信息
 
如果出现警告配置失败是由于网络原因造成,并非api的配置有问题,所以多提交几次


第4步:填入js的安全域名
 
第5步:找到网页帐号,然后点击修改
 
 
五．开启微信的自动回复功能
第1步:扫描测试二维码
 
第2步:输入一段文字,比如:”您好”,如果有回复”欢迎使用微信公众平台开发API”就代表自动回复功能开启成功.
 
发觉没有回复,这时并非是我们的配置错误了,而什么我们需要在api.php代码中注解掉绑定服务器的验证方法valid()

 
重新上传到服务器中

第3步:重新测试自动回复功能,如下:
 
出现以上界面,就代表自动回复功能开启成功了,同时也证明api和自定义服务器以及微信公众平台的服务已经进行绑定了Jzx5457    jZX22655457 Jzx22655457

六.分析微信基础接口核心示例Api
 
Lib目录:是微信开发的接口核心类目录
Lib/WeChat.class.php:是微信的接口核心类(但是只是提供了部分的接口示例截止到2014年)
Lib/WeChatApi.class.php:是微信服务器端高级接口的基础api连接的封装
Media目录:用于媒体上传(如:音乐,视频,图片等)
media.php:是微信媒体上传接口的配置文件
Lib/Command:是微信官方建议开发者使用命令行脚本的php文件存放目录
默认定义两个示例用于生成菜单和清除菜单
七．微信的接收接口形式（6大接口）

微信的接收接口是由微信官方自动实现，不需要我们编写任何的代码，接收接口就是微信客户端向微信服务器端发起xml模板文件，其文件由以下6个：
1）文本消息接口接收xml模板类型
 
<ToUserName>节点代表接收信息的一方是谁，注意在微信api当中由有2个属性：
$this -> FromUserName : 该属性指代微信的客户端
$this -> toUserName:该属性指代微信的服务器端
如果 <ToUserName>节点传入$this->toUserName，那么就当表当前接收信息的一方是微信公众平台的服务器端（称为接收接口），如果节点传入$this->FromUserName就代表接收信息的是微信客户端（称为回复接口）
<MsgType>节点，该节点在api当中使用$this->sendType来表示，表示当前的接收类型数据属于什么样的xml模板类型（文本，地理位置，音乐，图片,视频，连接..）。
如果接收的类型是文本消息，那么MsgType就是text对应api的this->sendType属性也是text

2)图片消息接口的xml模板
 
主要关心MsgType是image，对应$this->sendType=image就足够

3）语音消息接口的xml模板形式
 
主要关心MsgType是voice，对应$this->sendType=voice就足够
4)视频和小视频的xml模板形式
 
MsgType等于video代表是视频
MsType等于shortvideo代表是小视频
然而由于微信其实很难判断一个视频到底是不是视频，所以我们只需要统一使用video来进行判断就可以了，因为小视频也可以用video类型来代替
5）地理位置接口xml模板
 
MsgTyep等于location,$this->sendType对应也等于location

6)链接接收接口xml模板
 
msgType等于link就代表链接，但这个接收接口在现实开发中用的很少

八．在微信中开发代码获取用户上传的各种数据类型
在api.php当中编写代码如下 :
 
上传到阿里云当中进行测试,结果如下所示:
 

九.文本回复接口和图片回复接口

1)文本回复接口
 
回复接口toUserName节点必须等于$this->fromUserName(代表服务器回复信息给微信客户端)，MsgType等于text,对应的接口叫reText()方法在WeChat.class.php中定义:
 
对应定义的模板在WeChatApi.class.php当中：
 
可以在api当中使用WeChatApi::getMsgTpl(“text”)进行获取
2）图片回复消息接口
 
MsgType等于image,MediaId是回复这个图片消息的关键（也是该接口的难点），在api当中封装的图片接口叫reImage($MediaId),在wechat.class.php当中定义:
 
对应的xml模板定义在WechatApi.class.php文件中，可以使用WeChatApi::getMsgTpl(“image”)来获取：
 
十.使用文本回复接口实现简单号码簿功能
项目需求
当用户在微信公众平台中输入？号时，自动弹出如下信息：
【1】特种服务号码
【2】通讯服务号码
【3】银行服务号码
您可以通过输入【】方括号的编号获取内容哦！
回复1
常用特种服务号码：
匪警：110
火警：119
回复2
常用通讯服务号码：
中国移动：10086
中国电信：10000
回复3
常用银行服务号码：
工商银行：95588
建设银行：95533
根据上述的项目，我们的难点在于我们需要知道用户输入的关键字是什么，并且我们需要知道如何在文本消息接口当中产生换行的结果，在api.php当中编写代码如下所示:
 
上传到服务器中进行测试，效果如下:
 

十一．使用图片回复接口实现图片的回复

假设用户在客户端发出一条信息”热巴姐姐是谁?”,那么这时我们就已迪丽热巴的照片进行回复，但是在图片回复的接口当中我们需要传入MediaId。所以首先我们需要上传迪丽热巴的图片到微信的服务器端，使用测试调试工具进行上传获取:

第1步：找到测试调试工具进入后，获取access_token
 
第2步：填入appId和appsecret
 
 
第3步：复制access_token
 
第4步:选择媒体上传接口(image),填入access_token和上传迪丽热巴的图片
 
第5步：复制mediaId就是迪丽热巴的图片
 
第6步：编写代码如下所示
 
上传到服务器中进行测试，结果如下:
 


十二.音乐回复接口和视频回复接口
1）音乐回复接口的xml模板如下:
 
Title:表示音乐的名称
Description:表示音乐的描述
MusicUrl：表示有损音乐的播放地址
HQMusicUrl:表示高清无损音乐的播放地址(如果手机处于wifi的状态下，微信就会切换该地址进行播放)
MsgType:music
一般我们不具备高清无损音乐，所以我们可以把有损音乐和高清音乐设置为一个相同的地址
微信只能够播放在线的音乐，而不能播放本地的音乐
如果使用的是微信的测试账号，那么微信是不提供自动的背景设置功能
对应api中定义了方法为reMusic($title,$desc,$url,$hqurl),定义在wetChat.class.php中：
 
对应xml模板定义在WetChatApi.class.php中，可以使用WetChatApi::getMsgTpl(“music”)来进行获取:
 
2）视频回复接口的xml形式如下:
 
视频回复接口有以下几个关键点:
MediaId需要自己去获取（使用媒体上传接口或者调试测试工具）
MsgType为video
发觉在WeChat.class.php和WeChatApi.class.php当中作者没有为我们封装过任何的接口和xml模板
由于我们获取的微信Api示例是张伯龙在2014的ChinaJoy演示的示例代码，而2017年的时候微信已经更新很多接口了，所以接口没有的情况下，我们就需要使用自己的能力去原生开发加入的api代码当中了



十三.使用音乐回复接口
在微信客户端输入丽江神曲，就会用音乐回复<<一瞬间>>
准备音乐素材，把音乐上传到Media目录：
http://www.snk147.top/Media/ysj.mp3
编写代码如下:
 
上传到服务器中进行测试:
 
十四.编写视频回复接口
第1步：在WetChatApi.class.php当中封装视频回复接口的xml模板
 
第2步：在WeChat.class.php当中封装一个名为reVideo的回复接口
 
把WeChat.class.php和WeChatApi.class.php一并上传到服务器Lib目录中

第3步：打开在线测试调试工具获取access_token并上传视频素材
 
 
第4步：复制视频的mediaId
 

第5步：编写视频回复代码如下:
如果客户端发送”快乐的童年”就返回一段快乐童年视频
 
上传到服务器中测试结果如下:
 
十五.完善微信的api编写语音回复接口

在WeChatApi.class.php当中定义语音回复的模板
 
在WeChat.class.php文件中定义reVoice方法：
 

十六.图文回复接口（单图文，多图文）
图文回复接口的xml模板
 
MsgType为news就表示为图文回复消息，如果Articles当中有多个item节点，那么就是多图文，如果只有一个item节点那么就是单图文，对应的模板封装在WeChatApi.class.php当中：
 
我们发觉在<Aticles>节点当中只有一个%s，原因item节点作者封装一个叫做createNewsItems
的方法来进行构造:
 
我们发觉有一个叫reNews的方法中间调用了createNewsItems，代码如下:
 十七.使用图文回复接口实现单图文和多图文回复

1.如果用户输入关键字迪丽热巴，那么回复迪丽热巴的相关简介，点击简介跳转到百度百科
 
测试效果如下:
 

2.实现多图文，如果用户输入帅哥美女，这时我们就回复多图文信息
 
测试结果：
 
其实内容详细页，我们可以自定义内容页（使用响应式布局）
十七．订阅回复接口
如果希望用户关注我们的公众号时，告诉用户一些相关公众号功能，那么我们就需要使用订阅回复接口,如果一个用户关注了微信公众个平台，那么就会默认触发以下接口，其xml模板形式如下所示:
 
MsgType如果等于event那么就代表用户触发一个推送事件
Event如果等于subscribe就代表当前用户触发的推送事情是关注微信公众号
如果希望用户关注的时候调用订阅回复接口，那么就需要判断这个2个节点是否被触发，于是编写代码如下:
 
 
上传到服务器中测试，由于你需要测试的接口是订阅回复，必须先取消关注然后再重新关注才能触发事件:
 
十八．语音识别功能
目前该功能依然处于微信开发者的调试开发阶段，这个功能目前只能支持国语（标准），但张伯龙在ChinaJoy表达这个功能是未来趋势，如果要是使用语音识别功能，首先需要在后台启动该功能：
第1步:找到接口列表
 
第2步：点击开启按钮进行开启，否则无法调用该接口
 
第3步：判断当前多用户是否上传了一条语音消息判断sendType是否为voice,如果为voice那么微信的api就会有一个Recongnition的属性包含语音的功能，因此编写如下
 
测试结果如下:
 




十九.php的curl技术
1、cURL库
cURL库是一个非常强大的开源库，支持很多协议，包括HTTP、FTP、TELNET等，在微信开发中，我们使用它来发送HTTP请求。它给我们带来的好处是可以通过灵活的选项设置不同的HTTP协议参数，并且支持HTTPS。
要使用cURL库那么你的php版本里面必须包含该库的扩展(就如你使用gd库一样)
Curl简单把它理解称为编译器中的一个虚拟的浏览器，无论这个curl有多么的复杂，永远记住curl的四步走口诀：
 

2.cURL最重要的几个选项
#安全上传(主要是为了兼容php5.6在微信中的应用)
CURLOPT_SAFE_UPLOAD
#需要获取的 URL 地址
CURLOPT_URL
#SSL证书中是否存在一个公用名,证书和主机名(认证的域名)
CURLOPT_SSL_VERIFYHOST
#服务器端校检SSL证书
CURLOPT_SSL_VERIFYPEER
#是否以字符串形式进行返回
CURLOPT_RETURNTRANSFER
#是否使用post方式进行请求
CURLOPT_POST
#POST请求时需要post的数据包
CURLOPT_POSTFIELDS

学习curl最好不要在真正的服务器中进行，因为像阿里云这样的服务器帮你省略很多认证操作所以会到curl的代码不够完善，因此在windows下先进行学习

3.使用curl请求百度
编写curl_baidu1.php的代码如下所示:
 
测试结果没有问题:
 
4.使用curl请求百度(使用https协议)

 
测试如下:
 
编写curl_baidu2.php,修改代码如下：
由于curl是一个虚拟的浏览器，我们无法安装ssl的安全认证证书（但是阿里云的php是已经安装了），所以我们如果希望ssl不要被验证，那么就需要curl当中禁止ssl的协议
 
这时访问百度其实没有任何的问题，但是当前的请求是get请求，如果我们要使用post的请求，那么我们又应该如何设置呢？

编写curl_post.php代码如下:
 
编写post测试代码如下（curl_post_testing.php）
 
把curl_post_testing.php文件上传到阿里云当中，在curl_post.php当中测试结果如下：
 
如果我们需要把curl的post用于微信请求当中，那么有选项必须填入以下三项：
 

二十.使用面向对象的方法把curl整合Wechat.class.php当中
curl有1个难点，就是什么时候使用get什么时候使用post，在微信开发当中，如果CurlRquest方法中data参数不为空，那么就使用post提交，如果data为空那么就使用get进行请求，定义代码如下:
 
编写test.php代码如下:
 
 







一.微信的LBS应用和开发
1.什么是LBS
LBS（Location Based Service）基于位置的服务，它是通过电信移动运营商的无线电通讯网络（如GSM网、CDMA网）或外部定位方式(如GPS)获取移动终端用户的位置信息（地理坐标，或大地坐标）
2.微信的LBS接口
根据微信的官方文档编写的内容分析可知,微信的接收消息接口一个地理位置的消息接口
如下图所示:
 
假设微信客户端发送一个地理位置,那么MsgType节点就会返回location,代表接收到的消息类型为地理位置消息,MsgType在WetChat.class.php文件中用sendType属性来表示.
3.编写php代码返回地理位置的经纬度信息
微信文档仔细观察会发现2个很特别的节点,分别为Location_X和Location_Y分别表示地理位置的纬度和经度,在Api当中对应的属性是$this->lat和$this->lng.
$this->lat:表示纬度
$this->lng:表示经度
 
微信文档仔细观察会发现2个很特别的节点,分别为Location_X和Location_Y分别表示地理位置的纬度和经度,编写代码获取用户的经度和纬度信息:
 
测试结果如下:
 
4.使用百度的LBS云的逆地理编码服务
逆地理编码：即逆地址解析，由百度经纬度信息得到结构化地址信息，例如：“lat:31.325152,lng:120.558957”逆地址解析的结果是“江苏省苏州市虎丘区塔园路318号”。简单来说就是把经纬信息转化为详细的地址定位信息.
百度的LBS云提供了相关的Api接口给开发者使用,不过前提下是你要注册一个百度帐号并且通过实名认证才能使用这个接口,接口文档的网站地址如下:
http://lbsyun.baidu.com/index.php?title=webapi/guide/changeposition
打开地址的链接,找到左侧导航栏,如下图示所示的选项进行查看:
 
然后在文档中找到”逆地理编码服务”,如下图所示:
 
在该文档中,我们发现其json格式的api链接如下图所示:
 

其主要传值的参数其实只有纬度和经度信息:
 

且其请求方式为get请求,所以我们可以使用curl进行请求,但请求该api需要一个名为ak的参数,指代调用该api接口的密钥,可以在百度开发者中心以下位置找到:
 
5.使用逆地理编码服务的API接口定位结构地址详细
根据文档的信息,我们可以把地址组合成为以下链接信息:
 
为了代码的整洁性,我们采用面向对象的方式封装一个第三方的接口类为OptApi
在Lib目录下建立一个名为OptApi.class.php的文件,编写代码如下:
 
在api.php中调用lbs云服务接口
 
 
测试结果如下:
 
6.获取LBS的周边信息
编写php代码如下:
 
测试结果如下:
 
二.图灵机器人的接入
1.为什么需要微信机器人
如果我们希望拥有一个在线的客服功能,当用户输入一些问题有人能自动回复的时候该怎么办呢？
答：可以通过微信聊天机器人对接用户消息
图灵机器人网址：http://www.tuling123.com 
图灵机器人是瑞典一个公司开发的类似AlphaGo的服务器程序，这个程序目前在世界上据说支持48种语言，而它对中文的支持是产生在2014年的11月，因此很多公司就会接入图灵机器人来让客服不在线进行回复，同时图灵机器人有学习的能力，比如：搜索一个人叫“彭劲”
这个人不是很出名，但是补充对应的资料给图灵机器人进行显示。
但这个机器人免费使用的情况下它能够对接中文的回答一般不会超过5句，但是图灵机器人目前在中国，它最能够正确反应的信息有天气，有人物百科，有古诗，有笑话，这些图灵机器人的反应速度是很快很准确的。
登录进入图灵机器人后，我们需要做的第一件事情是获取apikey:
 
图灵机器人拥有开发的文档，它最先跟腾讯合作，所以它提供一系列WebApi给您使用：
 

2.图灵机器人的get请求方式
接口地址,请求方式:get
http://www.tuling123.com/openapi/api
参数:
info:请求的内容
key:你的apikey
返回格式为json:
text:图灵机器回答的文字内容
因此我们可以编写代码如下，首先封装链接到OptApi.class.php当中
 
在api.php中接入图灵机器人:
 
3.使用图灵机器的post请求方式
根据图灵机器人的api文档建议，其实图灵机器人希望我们用post传递，然而问题是传递数据是json格式的数据：
 
如果希望在curl里面post数据为json那么我们就首先要模拟一个浏览器的头部给curl
在php官方查找文档找到如下图所示的选项：
 
如果希望在curl的头部设置json格式，那么我们就需要编写以下代码
curl_setopt($ch,CURLOPT_HTTPHEADER,array(
            "Content-type:application/json",
            "Content-length:".$length
));
因此我们就需要在WeChat.class.php文件中编写CurlPostJson方法如下：
 
重新测试图灵机器人，我们就需要在OptApi.class.php当中重新封装要给post的url
 
还需注意，如果使用Post请求图灵机器人，必须传递以下这个3个参数：
info :你的问题
key : api的key
uesrid:我们一般传递时候使用12345678
在api.php中编写图灵机器人post请求方式代码如下：
 
测试结果如下所示:
 

三.微信的access_token凭证
1.什么是access_token
access_token是公众号的全局唯一接口调用凭据，公众号调用各接口时都需使用access_token。开发者需要进行妥善保存。access_token的存储至少要保留512个字符空间。access_token的有效期目前为2个小时，需定时刷新，重复获取将导致上次获取的access_token失效。
2.分析access_token的接口
我们需要先找到access_token的文档,方法如下：
 
根据分析发现,请求access_token需要使用相关的api链接接口进行请求返回,文档描述和请求方式如下所示:
 
那么我们就可以调用curl的方法去对access_token进行获取,然而有一个关键的问题就是这个api的链接附带的参数有3个,文档描述如下所示:
 
 
在WeChatApi.class.php当中开发者帮我们封装了获取access_token的url地址,如下:
 
如果希望使用access_token的api连接我们就需要配置类常量如下:
 
 
3.在WeChat.class.php中封装获取access_token的方法
 
我们自定义access_token如下所示:
 
上传到服务器当中,然后编写test.php代码进行access_token获取的测试:
 
上传test.php到服务器中进行测试结果如下:
 

 
注意:access_token一天只能调用6000次,一次的有效时间为2小时


四.使用微信的群发功能

根据文档分析可知,群发接口如下:
 

群发消息接口需要使用到access_token作为参数,并且使用post进行数据提交,数据提交格式如下所示:
 
如果需要在微信中进行群发,首先我们需要获取相关的用户openId(可以通过网页授权存储到数据库中进行循环获取),如果暂时没有保存到数据库中,那么可以通过测试账号中的关注列表进行获取:
第1步:获取大约4个openId
 
第2步:需要在Lib/Command当中定义一个命令行执行脚本,代码如下:
编写Common.php如下所示:
 

第3步:在WetChat.class.php当中找到群发消息接口如下:
 
构造群发数据包如下:
 
调用群发接口功能的方法SendMass():
 
如果成功发送就会errcode==0
 
上传到Lib/Command目录中,使用php命令进行执行
 
 
使用命令行执行是比较安全,其实也可以使用浏览器进行执行!注意:重复内容是不能群发多次的,一个月只能够群发4次,但是群发功能在现实开发当中我们必须要成为正式的开发者,并且拥有服务号认证才可以使用.
五.使用草料二维码生成器和媒体上传接口
有很多人喜欢在QQ或者泡泡当中发送网址的连接给用户,甚至有一些人在微信当中发送链接信息给用户,这时其实在用户的角度出发,这个体验并不好.为了提高整个体验,其实最早在国外twitter的公司就提出了一种叫做二维码的服务,其实二维码就是一些网站的连接图片,这个二维码是可以有效的提高用户的体验,因此如果我们需要发送一些网址信息的时候,建议在微信使用二维码进行发送.使用草料二维码生成器就可以生成一个网址的二维码.
 
问题来了,那么我们如何在微信服务器端发送二维码给用户呢?当用户发送传智播客的时候,那么就回复二维码的网址给用户,所以我们就需要把二维码进行上传,可以使用媒体上传接口进行上传.
媒体上传接口在WeChat.class.php当中定义如下:
 
查看文档,发觉上传媒体有如下说明:
 
 
发觉文档比较重新,于是我去可以一个叫media.php的文件
 
把代码复制到Lib/Command/Common.php中,然后再Lib/Command建立目录Media
然后把二维码下载后上传到该目录当中,然后编写命令行上传脚本如下:
 

六.客服回复接口
1.什么是客服回复接口
当用户和公众号产生特定动作的交互时，微信将会把消息数据推送给开发者，开发者可以在48小时内调用客服接口，通过POST一个JSON数据包来发送消息给普通用户。此接口主要用于客服等有人工消息处理环节的功能，方便开发者为用户提供更加优质的服务。其功能类似于文本回复接口和图文回复接口,但它的性能和速度优于文本回复接口和图文消息接口
其原理图如下:
 


2.使用客服回复接口回复文本消息
需求:客户端发送”您好”,我们就用客服回复接口回复”亲,您需要什么帮助吗?”,分析WeChat.class.php内容可知,有以下的接口:
接口会调用我们CurlRequest方法,使用post方式进行接口的请求,分析时候我们看到有一个api的url地址获取WeChatApi.class.php文件,内容如下:
 
对应的Url地址如下:
 
我们就可以在api.php当中编写以下代码:
 
测试结果如下:
 
3.使用客服回复接口回复图文消息
需求:如果微信客服端发送信息为”手鼓女神”那么我们就从数据库中调用相关手鼓女神类别的相关信息回复给客户端,如果客户端发送的信息是”斯诺克”,那么我就从数据库中调用相关斯诺克类别的信息回复给客户端,需求实现的步骤如下:
第1步:设计数据库表wx_news
 
第2步:使用pdo连接数据库,使用单例设计模式连接数据库
 

第3步:把DB类集合到api.php当中
 

第4步:在api.php当中编写数据数据获取方法getNews($type)
 

第5步:在api.php当中调用客服的图文回复接口
 
编写客服回复图文消息接口代码如下:
 
测试结果如下:
 
如果数据是实时那么数据库的压力就依然存在,所以如果希望优化这些数据,那么我们可以加入一个nosql的中间层(memcache)
七.使用memcache优化图文消息和access_token
1.回顾memcache
 

2.优化图文回复消息的数据库查询
如果我们需要优化图文回复消息,那么我们就需要生成两个key,一个叫snk,一个叫girl
 

3.优化access_token
access_token一天只能调用6000次,一次有效时间其实有2个小时,但如果每一次请求就覆盖上一次的access_token,对于有1000人访问的微信公众号来说,一个人最多只能请求6次,如果我们把1天分为24小时,然后access_token每一次请求都缓存1小时,那么1天当中access_token顶多被调用24次,大大节约6000次的开销,因此我们可以根据我们的需要把access_token存入到memcache当中进行缓存操作,我们可以修改WeChat.class.php当中GetAccessToken方法如下:
 

八.在微信当中使用菜单接口(创建和删除)
其实微信开发者在2014年的时候就已经提供了这个接口给我们,并且实现一定的封装,建议我们使用命令进行运行.分析文档可知,菜单定义如下:
 

在WeChatApi.class.php当中有封装对应的连接

 

编写代码在Lib/Command/CreateMenus.command.php如下:
 

在菜单有一个推送事件,有3个重要的属性
$this -> sendType == ‘event’
$this -> Event = ‘CLICK’ //单表有单击在菜单表示为type
 
代表当前菜单只能用于点击,而不能跳转
 
代表当前菜单只能跳转而不能触发点击事件
$this->EventKey=’自定义的key’//对应菜单中key定义
 
在api.php当中定义点击事件如下:
 

如果希望删除菜单,分析文档可知,删除菜单比较简单,但删除菜单就是全部一起删除,删除菜单会存在一个缓存的问题,正常来说删除后要24小时生效,如果希望马上看到效果需要先取消关注,然后再重新关注,才能看到效果
 
编写代码RemoveMeus.command.php代码如下:
 















一.使用草料二维码生成器和媒体上传接口
有很多人喜欢在QQ或者泡泡当中发送网址的连接给用户,甚至有一些人在微信当中发送链接信息给用户,这时其实在用户的角度出发,这个体验并不好.为了提高整个体验,其实最早在国外twitter的公司就提出了一种叫做二维码的服务,其实二维码就是一些网站的连接图片,这个二维码是可以有效的提高用户的体验,因此如果我们需要发送一些网址信息的时候,建议在微信使用二维码进行发送.使用草料二维码生成器就可以生成一个网址的二维码.
 
问题来了,那么我们如何在微信服务器端发送二维码给用户呢?当用户发送传智播客的时候,那么就回复二维码的网址给用户,所以我们就需要把二维码进行上传,可以使用媒体上传接口进行上传.
媒体上传接口在WeChat.class.php当中定义如下:
 
查看文档,发觉上传媒体有如下说明:
 
 
发觉文档比较重新,于是我去可以一个叫media.php的文件
 
把代码复制到Lib/Command/Common.php中,然后再Lib/Command建立目录Media
然后把二维码下载后上传到该目录当中,然后编写命令行上传脚本如下:
 
如果希望媒体上传接口上传成功需要把curl的CURLOPT_SAFE_UPLOAD设置为false
 
 
上传就可以获取二维码的mediaid，下图所示:
 

在api.php中如果我们需要传达传智播客的网站，我们就可以使用二维码的功能,编写代码如下：
 

二．网页授权接口
网页授权其实是为了网页能跟微信服务器端进行交互的一个功能，假设你想在你的网站当中获取微信用户的信息，那么就需要微信服务器端对你的网页进行授权。
 
如果希望获取用户的信息那么就需要了解网页授权的两种模式：
1.snsapi_base ：可以拉取用户的openId但无法获取用户的详细信息（很少用用，效率最高）
2.snsapi_userinfo ：可以获取用户所有的基本信息（头像，昵称，性别，所以在地,使用频率最高）
如果需要使用userinfo模式进行网页授权开发就必须遵循以下三步:
1)构造授权的url地址
2)使用授权的code去获取用户的网页授权access_token和客户端的openId
3)使用网页授权的access_token和openId去拉取微信客户端的相关用户信息

第1步：构造授权的url地址，使用userinfo模式
userinfo授权地址的构造模板如下:
https://open.weixin.qq.com/connect/oauth2/authorize?appid={$appID}&redirect_uri={$url}&response_type=code&scope=snsapi_userinfo&state=STATE#wechat_redirect 
 
redirect_uri这个参数必须使用urlencode进行编码后传入，因此如果我们需要构造这个url地址，建议编写php来动态构造，我们需要redirect_uri表示需要授权的网页地址的详细路径：
 
最终结果如下:
 



接下来把复制的授权地址，创建菜单如下:
 
菜单必须为view的跳转菜单，如果微信的版本不一样或者第一次访问这个链接，那么微信有可以会询问用户是否进行授权的提示:
 
但这个界面不是100%会出现（根据微信的版本和环境而定，如果出现用户确认就可以授权）
如果授权成功的话，那么微信服务器端就会传递一个授权的code到阿里云服务器当中，使用以下形式进行传递:
http://www.snk147.top/userinfo.php?code=授权code字符串
如果授权成功就会跳转到userinfo的路径下传达code如下:
 
第2步：使用code获取openId和网页授权的access_token 
网页access_token不同于普通access_token所以我们需要使用授权code进行获取，而不是使用GetAccessToken进行获取,编写代码如下所示：
在WeChatApi.class.php当中发现api地址如下:
 
在WeChat.class.php当中发现接口如下:
 
于是我们需要在ucenter/userinfo.php代码中编写代码如下：
 
测试结果如下所示:
 
第3步：使用网页access_token和openId获取用户信息
 
在WeChatApi.class.php当中发现api地址如下:
 
在WeChat.class.php当中发现userinfo模式的接口如下:
 
在ucenter/userinfo.php当中编写代码如下所示：
 
测试结果如下:
 
返回选项如下所示:
 
第4步：使用auicss美化用户中心
 
测试结果如下 :
 
注意:网页授权的用户拉取信息微信服务器端会缓存72个小时

三．实现美食积分兑换会员注册
第1步：设计会员表如下:
 

第2步：使用订阅事件获取用户的openid写入数据库当中
 
测试结果如下:
 
第2步：引导用户更新更多的用户信息，更新个人中心为优惠兑换券
删除菜单再重新建立菜单
 
测试如下:
 

第3步：如果用户第1次点击我的优惠券，那么就更新用户的相关资料属性，并且赠送会员20元的优惠券，因此我们需要设计数据库表如下所示：
 
 
测试结果如下所示:
 

第4步：在用户的会员中心中显示优惠券信息
 
 
测试结果如下：
 
第4步：产生使用优惠券的按钮，点击马上使用就使用优惠券，使用ajax进行修改
 
 
 
编写useCoupon.php代码如下所示:
 
测试结果如下：
 

第5步：如果双十一的时候要搞活动，所有的会员都有一张双11的50块钱优惠券，那么应该怎么呢？
 
测试结果如下:
 

四.使用thinkphp开发微信
1.thinkphp微信的sdk下载
 
在扩展中输入地址:http://www.thinkphp.cn/extend/588.html

 
 

2.安装thinkphp的微信sdk到thinkphp的项目当中
 
接下来部署thinkphp到阿里云服务器中就可以完成安装

3.在微信公众平台的后台配置thinkphp的api接入
编写IndexController.class.php文件的代码如下所示:
 
然后在微信公众平台的后台配置thinkphp如下所示:
 

4.在thinkphp当中开启微信的自动回复功能
 
测试结果如下所示:
 


5.判读用户上传的相关类型
 
测试结果如下:
 
6.在thinkphp当中使用订阅回复接口
 

测试结果如下所示:
 

7.在thinkphp当中使用图片回复接口和音乐回复接口
 
测试结果如下:
 
8.回复视频消息
 
测试结果如下:
 
9.回复单图文消息
 
测试结果如下:
 

 

10.获取access_token

 
 
微信的sdk开发还需自己封装很多功能



微信支付
微信支付的申请流程
要使用微信支付功能，必须要有微信公众号，而且公众号必须是服务号，而且是实名认证的。
申请入口在公众号后台：
 
2017.7.31 关于微信支付的功能，全部 迁移到了 微信支付商户平台页面：
https://pay.weixin.qq.com/guide/index.shtml
类似于支付宝的申请，需要以公司的资料申请，所以个人无法申请，只能等以后公司开通并认证了微信服务号以后申请微信支付。

微信支付开发文档：
https://pay.weixin.qq.com/wiki/doc/api/index.html

微信支付有四种不同的解决方案：
 

我们现在的PC网站，所以使用扫码支付。
 
开发文档
https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_1

支付接口下载地址
 
下载回来的demo：
 
cert：密钥证书【rsa证书】，这里的证书是无效的，只是demo提供的而已。[不过没有也不妨碍我们进行支付功能的开发，不过要要注意的是，以后开发退款、取消支付的时候需要证书，证书可以通过微信支付的管理后台得到 ]
example：非常重要【扫码支付的代码就在里面，我们也是拿这里的代码出来完成支付功能的】
image：里面两张代码的截图，使用接口的案例
lib：微信支付的核心类库
微信支付的demo使用
我们把这个接口放入到localhost中，通过浏览器来访问！
 
点击“扫码支付”！
 
我们可以看到微信支付提供了两种支付方式，我们使用模式二，这个文件在 example/notive.php文件中。
模式一比较复杂，需要公众号配置回调地址，并且这个模式生成的二维码不会过期，所以适合在线下做商品销售推广的时候使用。
模式二比较简单，只需要在代码中配置回调地址就可以了。这个模式生成的二维码只有两个小时的有效期，所以适合使用在线上网站中使用。

微信支付的返回结果处理
微信支付的返回结果与支付宝不同，微信支付的返回结果只有一种，通过post方法返回，所以是微信支付官方那边通过post访问我们的项目中的页面(这个页面里面处理支付结果的变化，并且保证这个页面，在公网上必须能访问到)
返回结果的参数
https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_7

微信支付的页面处理
默认情况下，我们开发的微信支付功能会自己在页面中通过二维码生成类qccode，显示一个二维码给用户进行扫码支付，但是这个页面在用户支付成功以后，并不会自动切换。
所以这一步功能需要我们自己完成，这样就需要使用js在前端通过ajax不断定时访问后台的页面一个地址，到微信那边查询当前订单的支付结果(无账号开发)或者到数据库中查询当前地址的支付结果(post)了。

微信支付的错误处理
线上开发微信支付时如果范围的结果出现错误，我们是无法观察到的！
所以需要在接收支付结果的页面中，把数据操作的结果和微信返回的结果使用日志读写的方式，写入到文件中，我们通过观察和比对文件就可以进行正常的排错工作了。


<?php
class DB
{
	//声明一个静态的对象
	private static $instance = null;
	//声明私有的构造方法
	private function __construct(){
		self::$instance = new PDO("mysql:host=localhost;dbname=wx;charset=utf8;","root","itcast888");
	}
	//声明获取实例的静态方法
	public static function getInstance(){
		if( self::$instance ==null ){
			new DB();
		}
		return self::$instance;
	} 
}
/*
//测试如下
$db = DB::getInstance();
$stmt = $db -> prepare( "select * from  wx_news where type=:type" );
$stmt -> execute( array(":type"=>'手鼓女神') );
$data = $stmt -> fetchAll( PDO::FETCH_ASSOC );
var_dump($data);*/













    public function wechatpay(Order $order){
      require_once "../wxpay/lib/WxPay.Api.php";    // 微信支付的核心类文件
      require_once "../wxpay/WxPay.NativePay.php";  // 微信扫码支付的类文件[原文件在example/目录下]

      // 组装微信支付的二维码
      $notify = new \NativePay();

      $input = new \WxPayUnifiedOrder();
      $input->SetBody($order->pro_name);    // 设置商品或支付单简要描述
      // $input->SetAttach("test");  // 设置附加数据
      $input->SetOut_trade_no( $order->order_number ); // 设置商户系统内部的订单号
      $input->SetTotal_fee( $order->price * 100 );  // 设置订单总金额
      $input->SetTime_start( date("YmdHis", strtotime( $order->created_at) ) );  // 设置订单生成时间
      $input->SetTime_expire(date("YmdHis", strtotime( $order->created_at) + 3600 * 6 ) );  // 设置订单失效时间
      // $input->SetGoods_tag("test");
      $input->SetNotify_url( url('order/notify') ); // 设置接收微信支付异步通知回调地址 （这个地址必须是公网上面可以访问的！！）
      $input->SetTrade_type("NATIVE");     // 设置支付的类型(扫码支付的值是 NATIVE )
      $input->SetProduct_id( $order->pro_id );  // 商品ID
      $result = $notify->GetPayUrl($input);// 生成二维码链接
      if( !isset( $result["code_url"] ) ){
        return redirect()->back()->withErrors(['当前订单已经支付了！']);
      }

      $url2 = urlencode($result["code_url"]);
      // echo $url2;die;
      $qrcode_url  = url('order/qrcode');
      $data['url'] = "$qrcode_url?data=$url2";
      $data['oid'] = $order->id;

//       echo <<<DDD
//       <img src="$qrcode_url?data=$url2" style="width:150px;height:150px;"/>
// DDD;




